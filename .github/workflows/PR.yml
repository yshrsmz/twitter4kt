name: PR

on:
  pull_request:
    paths-ignore:
      - '*.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache Gradle
        uses: actions/cache@v2.1.0
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'includedeBuild/dependencies/src/java/Deps.kt') }}

      - name: Prepare secrets
        run: echo $SECRETS | base64 -d > ./secret.properties
        env:
          SECRETS: ${{ secretS.SECRETS }}

      - name: Run build
        run: ./gradlew build

      - name: Slack Notification(Success)
          if: success()
          uses: tokorom/action-slack-incoming-webhook@master
          env:
            INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          with:
            text: Build successfully finished
            attachments: |
              [
                {
                  "color": "good",
                  "author_name": "${{ github.actor }}",
                  "author_icon": "${{ github.event.sender.avatar_url }}",
                  "fields": [
                    {
                      "title": "Commit Message",
                      "value": "${{ env.COMMIT_MESSAGE }}"
                    },
                    {
                      "title": "GitHub Actions URL",
                      "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                    },
                    {
                      "title": "Compare URL",
                      "value": "${{ github.event.compare }}"
                    }
                  ]
                }
              ]

      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

      - name: Slack Notification(Failure)
        if: failure()
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: Build Failed
          attachments: |
            [
              {
                "color": "danger",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "Commit Message",
                    "value": "${{ env.COMMIT_MESSAGE }}"
                  },
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Compare URL",
                    "value": "${{ github.event.compare }}"
                  }
                ]
              }
            ]
env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"